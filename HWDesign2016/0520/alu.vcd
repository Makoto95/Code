$date
	Fri May 20 17:22:39 2016
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module alutest $end
$var wire 8 ! O [7:0] $end
$var reg 8 " A [7:0] $end
$var reg 8 # B [7:0] $end
$var reg 4 $ CTR [3:0] $end
$var reg 1 % ck $end
$scope module alu $end
$var wire 8 & A [7:0] $end
$var wire 8 ' B [7:0] $end
$var wire 4 ( CTR [3:0] $end
$var wire 1 ) ck $end
$var reg 4 * C [3:0] $end
$var reg 8 + INA [7:0] $end
$var reg 8 , INB [7:0] $end
$var reg 8 - O [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx -
bx ,
bx +
bx *
0)
bx (
bx '
bx &
0%
bx $
bx #
bx "
bx !
$end
#40
1%
1)
#80
b0 $
b0 (
b10000001 #
b10000001 '
b100100 "
b100100 &
0%
0)
#120
b10000001 ,
b100100 +
b0 *
1%
1)
#160
b1100011 #
b1100011 '
b1001 "
b1001 &
0%
0)
#200
b10100101 -
b10100101 !
b1100011 ,
b1001 +
1%
1)
#240
b10001101 #
b10001101 '
b1101 "
b1101 &
0%
0)
#280
b1101100 -
b1101100 !
b10001101 ,
b1101 +
1%
1)
#320
b10010 #
b10010 '
b1100101 "
b1100101 &
0%
0)
#360
b10011010 -
b10011010 !
b10010 ,
b1100101 +
1%
1)
#400
0%
0)
